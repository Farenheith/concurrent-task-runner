"use strict";function cov_84jhdpc7c(){var path="/home/thiagosantos/Documents/projects/personal/task-runner/concurrent-task-runner/src/concurrent-task-runner.ts";var hash="223d919bfcf8159bce0f8c00204e6f6a6bbf8c10";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/thiagosantos/Documents/projects/personal/task-runner/concurrent-task-runner/src/concurrent-task-runner.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:18},end:{line:3,column:36}},"2":{start:{line:6,column:8},end:{line:6,column:47}},"3":{start:{line:7,column:8},end:{line:7,column:37}},"4":{start:{line:8,column:8},end:{line:8,column:29}},"5":{start:{line:9,column:8},end:{line:9,column:30}},"6":{start:{line:10,column:8},end:{line:13,column:11}},"7":{start:{line:16,column:23},end:{line:16,column:62}},"8":{start:{line:17,column:8},end:{line:17,column:28}},"9":{start:{line:18,column:29},end:{line:18,column:31}},"10":{start:{line:19,column:8},end:{line:23,column:9}},"11":{start:{line:21,column:12},end:{line:21,column:71}},"12":{start:{line:22,column:12},end:{line:22,column:32}},"13":{start:{line:24,column:8},end:{line:24,column:60}},"14":{start:{line:24,column:21},end:{line:24,column:59}},"15":{start:{line:27,column:22},end:{line:27,column:24}},"16":{start:{line:28,column:8},end:{line:28,column:41}},"17":{start:{line:29,column:8},end:{line:31,column:9}},"18":{start:{line:30,column:12},end:{line:30,column:49}},"19":{start:{line:34,column:8},end:{line:34,column:69}},"20":{start:{line:37,column:8},end:{line:39,column:9}},"21":{start:{line:38,column:12},end:{line:38,column:48}},"22":{start:{line:40,column:8},end:{line:40,column:35}},"23":{start:{line:43,column:0},end:{line:43,column:52}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:4},end:{line:5,column:5}},loc:{start:{line:5,column:66},end:{line:14,column:5}},line:5},"1":{name:"(anonymous_1)",decl:{start:{line:15,column:4},end:{line:15,column:5}},loc:{start:{line:15,column:19},end:{line:25,column:5}},line:15},"2":{name:"(anonymous_2)",decl:{start:{line:24,column:15},end:{line:24,column:16}},loc:{start:{line:24,column:21},end:{line:24,column:59}},line:24},"3":{name:"(anonymous_3)",decl:{start:{line:26,column:4},end:{line:26,column:5}},loc:{start:{line:26,column:44},end:{line:32,column:5}},line:26},"4":{name:"(anonymous_4)",decl:{start:{line:33,column:4},end:{line:33,column:5}},loc:{start:{line:33,column:38},end:{line:35,column:5}},line:33},"5":{name:"(anonymous_5)",decl:{start:{line:36,column:4},end:{line:36,column:5}},loc:{start:{line:36,column:16},end:{line:41,column:5}},line:36}},branchMap:{"0":{loc:{start:{line:19,column:15},end:{line:20,column:84}},type:"binary-expr",locations:[{start:{line:19,column:15},end:{line:19,column:62}},{start:{line:20,column:15},end:{line:20,column:84}}],line:19}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0]},inputSourceMap:{version:3,file:"/home/thiagosantos/Documents/projects/personal/task-runner/concurrent-task-runner/src/concurrent-task-runner.ts",sources:["/home/thiagosantos/Documents/projects/personal/task-runner/concurrent-task-runner/src/concurrent-task-runner.ts"],names:[],mappings:";;AAAA,qCAA6B;AAE7B,MAAa,oBAAoB;IAI/B,YACmB,eAA0B,EAC3C,WAAmB,EACF,UAAqC,EACrC,MAA0D;QAH1D,oBAAe,GAAf,eAAe,CAAW;QAE1B,eAAU,GAAV,UAAU,CAA2B;QACrC,WAAM,GAAN,MAAM,CAAoD;QAPrE,iBAAY,GAAG,CAAC,CAAC;QASvB,IAAI,CAAC,KAAK,GAAG,IAAI,iBAAM,CAAC;YACtB,SAAS,EAAE,IAAI;YACf,WAAW;SACZ,CAAC,CAAC;IACL,CAAC;IAEO,YAAY;QAClB,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACvD,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,MAAM,YAAY,GAAc,EAAE,CAAC;QACnC,OAAO,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM;eACjD,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACxE;YACA,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;QAED,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IACtD,CAAC;IAEO,KAAK,CAAC,WAAW,CAAC,MAAe,EAAE,YAAuB;QAChE,MAAM,KAAK,GAAG,EAAY,CAAC;QAC3B,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAEjC,KAAK,MAAM,UAAU,IAAI,YAAY,EAAE;YACrC,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SACtC;IACH,CAAC;IAEO,eAAe,CAAC,OAAgB,EAAE,OAAgB;QACxD,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAC/D,CAAC;IAEF,KAAK,CAAC,GAAG;QACN,OAAO,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;YACtD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;SACrC;QAED,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC;CACF;AAlDD,oDAkDC",sourcesContent:["import PQueue from 'p-queue';\n\nexport class ConcurrentTaskRunner<TEntity, TCache> {\n  private currentIndex = 0;\n  private readonly queue: PQueue;\n\n  constructor(\n    private readonly orderedEntities: TEntity[],\n    concurrency: number,\n    private readonly getGroupId: (job: TEntity) => unknown,\n    private readonly doWork: (job: TEntity, cache: TCache) => PromiseLike<void>,\n  ) {\n    this.queue = new PQueue({\n      autoStart: true,\n      concurrency,\n    });\n  }\n\n  private getNextTasks() {\n    const entity = this.orderedEntities[this.currentIndex];\n    this.currentIndex++;\n    const nextEntities: TEntity[] = [];\n    while (this.currentIndex < this.orderedEntities.length\n      && this.isFromSameGroup(entity, this.orderedEntities[this.currentIndex])\n    ) {\n      nextEntities.push(this.orderedEntities[this.currentIndex]);\n      this.currentIndex++;\n    }\n\n    return () => this.doWorkGroup(entity, nextEntities);\n  }\n\n  private async doWorkGroup(entity: TEntity, nextEntities: TEntity[]) {\n    const cache = {} as TCache;\n    await this.doWork(entity, cache);\n\n    for (const nextEntity of nextEntities) {\n      await this.doWork(nextEntity, cache);\n    }\n  }\n\n  private isFromSameGroup(entity1: TEntity, entity2: TEntity) {\n    return this.getGroupId(entity1) === this.getGroupId(entity2);\n  }\n\n\tasync run() {\n    while (this.currentIndex < this.orderedEntities.length) {\n      this.queue.add(this.getNextTasks());\n    }\n\n    return this.queue.onIdle();\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"223d919bfcf8159bce0f8c00204e6f6a6bbf8c10"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_84jhdpc7c=function(){return actualCoverage;};return actualCoverage;}cov_84jhdpc7c().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const p_queue_1=(cov_84jhdpc7c().s[1]++,require("p-queue"));class ConcurrentTaskRunner{constructor(orderedEntities,concurrency,getGroupId,doWork){cov_84jhdpc7c().f[0]++;cov_84jhdpc7c().s[2]++;this.orderedEntities=orderedEntities;cov_84jhdpc7c().s[3]++;this.getGroupId=getGroupId;cov_84jhdpc7c().s[4]++;this.doWork=doWork;cov_84jhdpc7c().s[5]++;this.currentIndex=0;cov_84jhdpc7c().s[6]++;this.queue=new p_queue_1.default({autoStart:true,concurrency});}getNextTasks(){cov_84jhdpc7c().f[1]++;const entity=(cov_84jhdpc7c().s[7]++,this.orderedEntities[this.currentIndex]);cov_84jhdpc7c().s[8]++;this.currentIndex++;const nextEntities=(cov_84jhdpc7c().s[9]++,[]);cov_84jhdpc7c().s[10]++;while((cov_84jhdpc7c().b[0][0]++,this.currentIndex<this.orderedEntities.length)&&(cov_84jhdpc7c().b[0][1]++,this.isFromSameGroup(entity,this.orderedEntities[this.currentIndex]))){cov_84jhdpc7c().s[11]++;nextEntities.push(this.orderedEntities[this.currentIndex]);cov_84jhdpc7c().s[12]++;this.currentIndex++;}cov_84jhdpc7c().s[13]++;return()=>{cov_84jhdpc7c().f[2]++;cov_84jhdpc7c().s[14]++;return this.doWorkGroup(entity,nextEntities);};}async doWorkGroup(entity,nextEntities){cov_84jhdpc7c().f[3]++;const cache=(cov_84jhdpc7c().s[15]++,{});cov_84jhdpc7c().s[16]++;await this.doWork(entity,cache);cov_84jhdpc7c().s[17]++;for(const nextEntity of nextEntities){cov_84jhdpc7c().s[18]++;await this.doWork(nextEntity,cache);}}isFromSameGroup(entity1,entity2){cov_84jhdpc7c().f[4]++;cov_84jhdpc7c().s[19]++;return this.getGroupId(entity1)===this.getGroupId(entity2);}async run(){cov_84jhdpc7c().f[5]++;cov_84jhdpc7c().s[20]++;while(this.currentIndex<this.orderedEntities.length){cov_84jhdpc7c().s[21]++;this.queue.add(this.getNextTasks());}cov_84jhdpc7c().s[22]++;return this.queue.onIdle();}}cov_84jhdpc7c().s[23]++;exports.ConcurrentTaskRunner=ConcurrentTaskRunner;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvdGhpYWdvc2FudG9zL0RvY3VtZW50cy9wcm9qZWN0cy9wZXJzb25hbC90YXNrLXJ1bm5lci9jb25jdXJyZW50LXRhc2stcnVubmVyL3NyYy9jb25jdXJyZW50LXRhc2stcnVubmVyLnRzIiwic291cmNlcyI6WyIvaG9tZS90aGlhZ29zYW50b3MvRG9jdW1lbnRzL3Byb2plY3RzL3BlcnNvbmFsL3Rhc2stcnVubmVyL2NvbmN1cnJlbnQtdGFzay1ydW5uZXIvc3JjL2NvbmN1cnJlbnQtdGFzay1ydW5uZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxxQ0FBNkI7QUFFN0IsTUFBYSxvQkFBb0I7SUFJL0IsWUFDbUIsZUFBMEIsRUFDM0MsV0FBbUIsRUFDRixVQUFxQyxFQUNyQyxNQUEwRDtRQUgxRCxvQkFBZSxHQUFmLGVBQWUsQ0FBVztRQUUxQixlQUFVLEdBQVYsVUFBVSxDQUEyQjtRQUNyQyxXQUFNLEdBQU4sTUFBTSxDQUFvRDtRQVByRSxpQkFBWSxHQUFHLENBQUMsQ0FBQztRQVN2QixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksaUJBQU0sQ0FBQztZQUN0QixTQUFTLEVBQUUsSUFBSTtZQUNmLFdBQVc7U0FDWixDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU8sWUFBWTtRQUNsQixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUN2RCxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDcEIsTUFBTSxZQUFZLEdBQWMsRUFBRSxDQUFDO1FBQ25DLE9BQU8sSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU07ZUFDakQsSUFBSSxDQUFDLGVBQWUsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsRUFDeEU7WUFDQSxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7WUFDM0QsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1NBQ3JCO1FBRUQsT0FBTyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRU8sS0FBSyxDQUFDLFdBQVcsQ0FBQyxNQUFlLEVBQUUsWUFBdUI7UUFDaEUsTUFBTSxLQUFLLEdBQUcsRUFBWSxDQUFDO1FBQzNCLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFFakMsS0FBSyxNQUFNLFVBQVUsSUFBSSxZQUFZLEVBQUU7WUFDckMsTUFBTSxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsQ0FBQztTQUN0QztJQUNILENBQUM7SUFFTyxlQUFlLENBQUMsT0FBZ0IsRUFBRSxPQUFnQjtRQUN4RCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEtBQUssSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMvRCxDQUFDO0lBRUYsS0FBSyxDQUFDLEdBQUc7UUFDTixPQUFPLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxNQUFNLEVBQUU7WUFDdEQsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDLENBQUM7U0FDckM7UUFFRCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDN0IsQ0FBQztDQUNGO0FBbERELG9EQWtEQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQUXVldWUgZnJvbSAncC1xdWV1ZSc7XG5cbmV4cG9ydCBjbGFzcyBDb25jdXJyZW50VGFza1J1bm5lcjxURW50aXR5LCBUQ2FjaGU+IHtcbiAgcHJpdmF0ZSBjdXJyZW50SW5kZXggPSAwO1xuICBwcml2YXRlIHJlYWRvbmx5IHF1ZXVlOiBQUXVldWU7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSByZWFkb25seSBvcmRlcmVkRW50aXRpZXM6IFRFbnRpdHlbXSxcbiAgICBjb25jdXJyZW5jeTogbnVtYmVyLFxuICAgIHByaXZhdGUgcmVhZG9ubHkgZ2V0R3JvdXBJZDogKGpvYjogVEVudGl0eSkgPT4gdW5rbm93bixcbiAgICBwcml2YXRlIHJlYWRvbmx5IGRvV29yazogKGpvYjogVEVudGl0eSwgY2FjaGU6IFRDYWNoZSkgPT4gUHJvbWlzZUxpa2U8dm9pZD4sXG4gICkge1xuICAgIHRoaXMucXVldWUgPSBuZXcgUFF1ZXVlKHtcbiAgICAgIGF1dG9TdGFydDogdHJ1ZSxcbiAgICAgIGNvbmN1cnJlbmN5LFxuICAgIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXROZXh0VGFza3MoKSB7XG4gICAgY29uc3QgZW50aXR5ID0gdGhpcy5vcmRlcmVkRW50aXRpZXNbdGhpcy5jdXJyZW50SW5kZXhdO1xuICAgIHRoaXMuY3VycmVudEluZGV4Kys7XG4gICAgY29uc3QgbmV4dEVudGl0aWVzOiBURW50aXR5W10gPSBbXTtcbiAgICB3aGlsZSAodGhpcy5jdXJyZW50SW5kZXggPCB0aGlzLm9yZGVyZWRFbnRpdGllcy5sZW5ndGhcbiAgICAgICYmIHRoaXMuaXNGcm9tU2FtZUdyb3VwKGVudGl0eSwgdGhpcy5vcmRlcmVkRW50aXRpZXNbdGhpcy5jdXJyZW50SW5kZXhdKVxuICAgICkge1xuICAgICAgbmV4dEVudGl0aWVzLnB1c2godGhpcy5vcmRlcmVkRW50aXRpZXNbdGhpcy5jdXJyZW50SW5kZXhdKTtcbiAgICAgIHRoaXMuY3VycmVudEluZGV4Kys7XG4gICAgfVxuXG4gICAgcmV0dXJuICgpID0+IHRoaXMuZG9Xb3JrR3JvdXAoZW50aXR5LCBuZXh0RW50aXRpZXMpO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyBkb1dvcmtHcm91cChlbnRpdHk6IFRFbnRpdHksIG5leHRFbnRpdGllczogVEVudGl0eVtdKSB7XG4gICAgY29uc3QgY2FjaGUgPSB7fSBhcyBUQ2FjaGU7XG4gICAgYXdhaXQgdGhpcy5kb1dvcmsoZW50aXR5LCBjYWNoZSk7XG5cbiAgICBmb3IgKGNvbnN0IG5leHRFbnRpdHkgb2YgbmV4dEVudGl0aWVzKSB7XG4gICAgICBhd2FpdCB0aGlzLmRvV29yayhuZXh0RW50aXR5LCBjYWNoZSk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBpc0Zyb21TYW1lR3JvdXAoZW50aXR5MTogVEVudGl0eSwgZW50aXR5MjogVEVudGl0eSkge1xuICAgIHJldHVybiB0aGlzLmdldEdyb3VwSWQoZW50aXR5MSkgPT09IHRoaXMuZ2V0R3JvdXBJZChlbnRpdHkyKTtcbiAgfVxuXG5cdGFzeW5jIHJ1bigpIHtcbiAgICB3aGlsZSAodGhpcy5jdXJyZW50SW5kZXggPCB0aGlzLm9yZGVyZWRFbnRpdGllcy5sZW5ndGgpIHtcbiAgICAgIHRoaXMucXVldWUuYWRkKHRoaXMuZ2V0TmV4dFRhc2tzKCkpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLnF1ZXVlLm9uSWRsZSgpO1xuICB9XG59XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RoaWFnb3NhbnRvcy9Eb2N1bWVudHMvcHJvamVjdHMvcGVyc29uYWwvdGFzay1ydW5uZXIvY29uY3VycmVudC10YXNrLXJ1bm5lci9zcmMvY29uY3VycmVudC10YXNrLXJ1bm5lci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiMmdOQUFBLEtBQUEsQ0FBQSxTQUFBLHlCQUFBLE9BQUEsQ0FBQSxTQUFBLENBQUEsQ0FBQSxDQUVBLEtBQWEsQ0FBQSxvQkFBb0IsQ0FJL0IsV0FBQSxDQUNtQixlQURuQixDQUVFLFdBRkYsQ0FHbUIsVUFIbkIsQ0FJbUIsTUFKbkIsQ0FJNkUsK0NBSDFELEtBQUEsZUFBQSxDQUFBLGVBQUEsQ0FHMEQsdUJBRDFELEtBQUEsVUFBQSxDQUFBLFVBQUEsQ0FDMEQsdUJBQTFELEtBQUEsTUFBQSxDQUFBLE1BQUEsQ0FBMEQsdUJBUHJFLEtBQUEsWUFBQSxDQUFlLENBQWYsQ0FPcUUsdUJBRTNFLEtBQUssS0FBTCxDQUFhLEdBQUksQ0FBQSxTQUFBLENBQUEsT0FBSixDQUFXLENBQ3RCLFNBQVMsQ0FBRSxJQURXLENBRXRCLFdBRnNCLENBQVgsQ0FBYixDQUlELENBRU8sWUFBWSxFQUFBLHdCQUNsQixLQUFNLENBQUEsTUFBTSx5QkFBRyxLQUFLLGVBQUwsQ0FBcUIsS0FBSyxZQUExQixDQUFILENBQVosQ0FEa0IsdUJBRWxCLEtBQUssWUFBTCxHQUNBLEtBQU0sQ0FBQSxZQUFZLHlCQUFjLEVBQWQsQ0FBbEIsQ0FIa0Isd0JBSWxCLE1BQU8sZ0NBQUssWUFBTCxDQUFvQixLQUFLLGVBQUwsQ0FBcUIsTUFBekMsOEJBQ0YsS0FBSyxlQUFMLENBQXFCLE1BQXJCLENBQTZCLEtBQUssZUFBTCxDQUFxQixLQUFLLFlBQTFCLENBQTdCLENBREUsQ0FBUCxDQUVFLHlCQUNBLFlBQVksQ0FBQyxJQUFiLENBQWtCLEtBQUssZUFBTCxDQUFxQixLQUFLLFlBQTFCLENBQWxCLEVBREEsd0JBRUEsS0FBSyxZQUFMLEdBQ0QsQ0FUaUIsd0JBV2xCLE1BQU8sSUFBTSw0REFBSyxXQUFMLENBQWlCLE1BQWpCLENBQXlCLFlBQXpCLEVBQXNDLENBQW5ELENBQ0QsQ0FFTyxLQUFNLENBQUEsV0FBTixDQUFrQixNQUFsQixDQUFtQyxZQUFuQyxDQUEwRCx3QkFDaEUsS0FBTSxDQUFBLEtBQUssMEJBQUcsRUFBSCxDQUFYLENBRGdFLHdCQUVoRSxLQUFNLE1BQUssTUFBTCxDQUFZLE1BQVosQ0FBb0IsS0FBcEIsQ0FBTixDQUZnRSx3QkFJaEUsSUFBSyxLQUFNLENBQUEsVUFBWCxHQUF5QixDQUFBLFlBQXpCLENBQXVDLHlCQUNyQyxLQUFNLE1BQUssTUFBTCxDQUFZLFVBQVosQ0FBd0IsS0FBeEIsQ0FBTixDQUNELENBQ0YsQ0FFTyxlQUFlLENBQUMsT0FBRCxDQUFtQixPQUFuQixDQUFtQyxnREFDeEQsTUFBTyxNQUFLLFVBQUwsQ0FBZ0IsT0FBaEIsSUFBNkIsS0FBSyxVQUFMLENBQWdCLE9BQWhCLENBQXBDLENBQ0QsQ0FFRixLQUFNLENBQUEsR0FBTixFQUFTLGdEQUNOLE1BQU8sS0FBSyxZQUFMLENBQW9CLEtBQUssZUFBTCxDQUFxQixNQUFoRCxDQUF3RCx5QkFDdEQsS0FBSyxLQUFMLENBQVcsR0FBWCxDQUFlLEtBQUssWUFBTCxFQUFmLEVBQ0QsQ0FISyx3QkFLTixNQUFPLE1BQUssS0FBTCxDQUFXLE1BQVgsRUFBUCxDQUNELENBakQ4QixDLHdCQUFqQyxPQUFBLENBQUEsb0JBQUEsQ0FBQSxvQkFBQSxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFBRdWV1ZSBmcm9tICdwLXF1ZXVlJztcblxuZXhwb3J0IGNsYXNzIENvbmN1cnJlbnRUYXNrUnVubmVyPFRFbnRpdHksIFRDYWNoZT4ge1xuICBwcml2YXRlIGN1cnJlbnRJbmRleCA9IDA7XG4gIHByaXZhdGUgcmVhZG9ubHkgcXVldWU6IFBRdWV1ZTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJlYWRvbmx5IG9yZGVyZWRFbnRpdGllczogVEVudGl0eVtdLFxuICAgIGNvbmN1cnJlbmN5OiBudW1iZXIsXG4gICAgcHJpdmF0ZSByZWFkb25seSBnZXRHcm91cElkOiAoam9iOiBURW50aXR5KSA9PiB1bmtub3duLFxuICAgIHByaXZhdGUgcmVhZG9ubHkgZG9Xb3JrOiAoam9iOiBURW50aXR5LCBjYWNoZTogVENhY2hlKSA9PiBQcm9taXNlTGlrZTx2b2lkPixcbiAgKSB7XG4gICAgdGhpcy5xdWV1ZSA9IG5ldyBQUXVldWUoe1xuICAgICAgYXV0b1N0YXJ0OiB0cnVlLFxuICAgICAgY29uY3VycmVuY3ksXG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIGdldE5leHRUYXNrcygpIHtcbiAgICBjb25zdCBlbnRpdHkgPSB0aGlzLm9yZGVyZWRFbnRpdGllc1t0aGlzLmN1cnJlbnRJbmRleF07XG4gICAgdGhpcy5jdXJyZW50SW5kZXgrKztcbiAgICBjb25zdCBuZXh0RW50aXRpZXM6IFRFbnRpdHlbXSA9IFtdO1xuICAgIHdoaWxlICh0aGlzLmN1cnJlbnRJbmRleCA8IHRoaXMub3JkZXJlZEVudGl0aWVzLmxlbmd0aFxuICAgICAgJiYgdGhpcy5pc0Zyb21TYW1lR3JvdXAoZW50aXR5LCB0aGlzLm9yZGVyZWRFbnRpdGllc1t0aGlzLmN1cnJlbnRJbmRleF0pXG4gICAgKSB7XG4gICAgICBuZXh0RW50aXRpZXMucHVzaCh0aGlzLm9yZGVyZWRFbnRpdGllc1t0aGlzLmN1cnJlbnRJbmRleF0pO1xuICAgICAgdGhpcy5jdXJyZW50SW5kZXgrKztcbiAgICB9XG5cbiAgICByZXR1cm4gKCkgPT4gdGhpcy5kb1dvcmtHcm91cChlbnRpdHksIG5leHRFbnRpdGllcyk7XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIGRvV29ya0dyb3VwKGVudGl0eTogVEVudGl0eSwgbmV4dEVudGl0aWVzOiBURW50aXR5W10pIHtcbiAgICBjb25zdCBjYWNoZSA9IHt9IGFzIFRDYWNoZTtcbiAgICBhd2FpdCB0aGlzLmRvV29yayhlbnRpdHksIGNhY2hlKTtcblxuICAgIGZvciAoY29uc3QgbmV4dEVudGl0eSBvZiBuZXh0RW50aXRpZXMpIHtcbiAgICAgIGF3YWl0IHRoaXMuZG9Xb3JrKG5leHRFbnRpdHksIGNhY2hlKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGlzRnJvbVNhbWVHcm91cChlbnRpdHkxOiBURW50aXR5LCBlbnRpdHkyOiBURW50aXR5KSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0R3JvdXBJZChlbnRpdHkxKSA9PT0gdGhpcy5nZXRHcm91cElkKGVudGl0eTIpO1xuICB9XG5cblx0YXN5bmMgcnVuKCkge1xuICAgIHdoaWxlICh0aGlzLmN1cnJlbnRJbmRleCA8IHRoaXMub3JkZXJlZEVudGl0aWVzLmxlbmd0aCkge1xuICAgICAgdGhpcy5xdWV1ZS5hZGQodGhpcy5nZXROZXh0VGFza3MoKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMucXVldWUub25JZGxlKCk7XG4gIH1cbn1cbiJdfQ==